?sub
gregexpr
?gregexpr
seq(2.4,3,7)
seq(2.4,3,length=7)
?seq
x<-list(e=2,g=4)
y<-list(h=10)
z<-list(x,y)
length(z)
library(XLConnect)
library(XLConnectJars)
library(rJava)
dat<-dane=readWorksheetFromFile("Getting and Cleaning Data/FDATA.gov_NGAP.xlsx", sheet=1)
library(httr)
install.packages("httr")
library(httr)
library(httr)
install.packages("httr")
install.packages("httr")
library(httr)
?oauth_endpoints
oauth_endpoints("github")
oauth_app
o
oauth_app
?oauth_app
? oauth2.0_token
?config
?GET
?stop_for_status
myapp <- oauth_app("github",
key = "7dd7570254ecaac38c0c",
secret = "290f8be22bf8b86eb907c3ec007ff4889f3274e9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github",
key = "7dd7570254ecaac38c0c",
secret = "290f8be22bf8b86eb907c3ec007ff4889f3274e9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
install.packages("httpuv")
library(httr)
library(httpuv)
myapp <- oauth_app("github",
key = "f728b10c43950ba3f825",
secret = "bfb5a77bd19c9b89f5bdfcc7d57f78793d0c80b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github",
key = "f728b10c43950ba3f825",
secret = "bfb5a77bd19c9b89f5bdfcc7d57f78793d0c80b5")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "f728b10c43950ba3f825",
secret = "bfb5a77bd19c9b89f5bdfcc7d57f78793d0c80b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
myapp <- oauth_app("github",
key = "f728b10c43950ba3f825",
secret = "bfb5a77bd19c9b89f5bdfcc7d57f78793d0c80b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp,cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp,cache = FALSE)
library(httr)
library(httpuv)
myapp <- oauth_app("github",
key = "f728b10c43950ba3f825",
secret = "bfb5a77bd19c9b89f5bdfcc7d57f78793d0c80b5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp,cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
str<-content(req)
str2<-jsonlite::fromJSON(toJSON(str))
install.packages("jsonlite")
library(jsonlite)
str2<-jsonlite::fromJSON(toJSON(str))
View(str2)
header(str2)
head(str2)
colnames(str2)
str2$created_at[=="datasharing",]
str2$created_at[="datasharing",]
str2$created_at[="datasharing"]
str2$created_at
str2["datasharing"]
str2[,"datasharing"]
str2$name
str2[name="datasharing",]
str2[name=="datasharing",]
str2[str2$name=="datasharing",]
str2$created_at[str2$name=="datasharing",]
str2[str2$name=="datasharing",]
str2[str2$name=="datasharing",created_at]
str2[str2$name=="datasharing",str2$created_at]
dim(str2)
type(str2)
typeof(str2)
str2[str2$name=="datasharing",][created_at]
str2[[created_at]][str2$name=="datasharing",]
str2$created_at[str2$name=="datasharing",]
str2$created_at
str2[[created_at]][str2$name=="datasharing",]
str2[[str2$name=="datasharing",]][created_at]
str2[str2$name=="datasharing",]
str2$created_at
str2$created_at[str2$name=="datasharing",]
str2$created_at
str2[str2$name=="datasharing",]
df<-data.frame(str2)
DF$created_at[str2$name=="datasharing",]
df$created_at[str2$name=="datasharing",]
df$created_at[df$name=="datasharing",]
str3<-str2[str2$name=="datasharing",]
str3$created_at
df[df$name=="datasharing",]$created_at
str2[str2$name=="datasharing",]$created_at
getwd()
setwd=("D:/Adam Karolewski/Studia podyplomowe/Coursera/Data Science Specialization/Getting and Cleaning Data/Quizz2")
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
file<-download.file(fileURL, destfile="ACS.csv")
acs<-read.csv("ACS/csv")
acs<-read.csv("ACS.csv")
install.packages("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
View(acs)
sqldf("select pwgtp1,AGEP from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=read.lines(con)
close(con)
htmlCode=read.Lines(con)
library(httr)
htmlCode=read.Lines(con)
htmlCode=readLines(con)
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
nchar(htmlCode[10]) nchar(htmlCode[20]) nchar(htmlCode[30]) nchar(htmlCode[100])
nchar(htmlCode[10]) & nchar(htmlCode[20]) & nchar(htmlCode[30]) & nchar(htmlCode[100])
str(nchar(htmlCode[10]) & str(nchar(htmlCode[20])) & str(nchar(htmlCode[30])) & str(nchar(htmlCode[100]))
paste(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), str(nchar(htmlCode[100]))
paste(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
library("utils", lib.loc="C:/Program Files/R/R-3.1.2/library")
fileURL<-https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for
download.file(fileURL, destfile=wksst8110.for)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileURL, destfile="wksst8110.for")
df<-read.fwf("wksst8110.for")
df<-read.fwf("wksst8110.for",header=TRUE)
df<-read.fwf("wksst8110.for",widths=,header=TRUE)
df<-read.fwf("wksst8110.for",widths=9,header=TRUE)
View(df)
df<-read.fwf("wksst8110.for",widths=9,header=TRUE,sep=" ")
df<-read.fwf("wksst8110.for",widths=9,header=TRUE,sep=" ", skip=1)
require(readr)
install.packages("readr")
require(readr)
?read_fwf
?fwf_positions
df<-read_fwf("wksst8110.for"fwf_empty("wksst8110.for"))
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"))
View(df)
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"),skip=1)
View(df)
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"),skip=3)
View(df)
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"),skip=4)
View(df)
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"),header=TRUE,skip=4)
View(df)
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"),header=TRUE,skip=3)
View(df)
df<-read_fwf("wksst8110.for",fwf_empty("wksst8110.for"),skip=3)
View(df)
?read.fwf
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),header=TRUE, skip=4)
View(df)
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),header=TRUE, skip=4)
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
View(df)
df<-read.fwf("wksst8110.for",widths=c(9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
View(df)
df<-read.fwf("wksst8110.for",widths=c(9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), header=TRUE, skip=4)
df<-read.fwf("wksst8110.for",widths=c(9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), header=TRUE, skip=4, sep=" ")
df<-read.fwf("wksst8110.for",widths=c(9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), header=TRUE, skip=3, sep=" ")
View(df)
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), header=TRUE, skip=3, sep=" ")
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), header=TRUE, skip=4, sep=" ")
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),skip=4)
View(df)
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),skip=3)
View(df)
df<-read.fwf("wksst8110.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),skip=4)
sum(df[3,])
sum(df(,3))
df(,3)
df[,3]
View(df)
sum(df[,4])
?which
library(curl)
fileURL="https://drive.google.com/file/d/0BwVszbioFUmGUFNaajVMRTdmRzA/view?usp=sharing"
#fileURL="https://drive.google.com/file/d/0BwVszbioFUmGUFNaajVMRTdmRzA/view?pref=2&pli=1"
file="learningData.csv"
setInternet2(use=T)
download.file(fileURL, destfile=file, method="curl")
fileURL="https://drive.google.com/file/d/0BwVszbioFUmGUFNaajVMRTdmRzA/view?usp=sharing"
#fileURL="https://drive.google.com/file/d/0BwVszbioFUmGUFNaajVMRTdmRzA/view?pref=2&pli=1"
file="learningData.csv"
setInternet2(use=T)
download.file(fileURL, destfile=file, method="curl")
library(RCurl)
library(XML)
temp<-getURL(fileURL,ssl.verifyPeer=FALSE)
doc<-htmlTreeParse(temp, useInternal=TRUE)
doc
fileURL="https://drive.google.com/file/d/0BwVszbioFUmGUFNaajVMRTdmRzA/view?usp=sharing&amp;usp=embed_googleplus"
#fileURL="https://drive.google.com/file/d/0BwVszbioFUmGUFNaajVMRTdmRzA/view?pref=2&pli=1"
file="learningData.csv"
setInternet2(use=T)
download.file(fileURL, destfile=file, method="curl")
library(curl)
fileURL="https://drive.google.com/file/d/0B86_a8ltyoL3MmRHbHRvSGZvYjg/view?usp=sharing"
file="learningData.csv"
setInternet2(use=T)
download.file(fileURL, destfile=file, method="curl")
z<-x(4,7,9,8)
z[-1:-2]
z<-c(4,7,9,8)
z[-1:-2]
setwd(setwd=("D:/Adam Karolewski/Studia podyplomowe/Coursera/Data Science Specialization/Getting and Cleaning Data/Quizz3")
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
fstr<-"Fss06hid.csv"#file string
download.file(fileURL, fstr)
download.file(fileURL, destfile=fstr)
library("curl")
download.file(fileURL, destfile=fstr, method="curl")
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
fstr<-"Fss06hid.csv"#file string
download.file(fileURL, destfile=fstr)
hh<-read.csv(fstr)
head(hh)
names(hh)
hh1<-hh$ACR
hh1<-hh$ACR
hh$ACR
agricultureLogical<-select(hh,SERIALNO,ACR:AGS)
library(dplyr)
agricultureLogical<-select(hh,SERIALNO,ACR:AGS)
agricultureLogical<-select(hh,SERIALNO)
head(hh)
library(dplyr)
library("dplyr")
install.packages("dplyr")
library("dplyr")
agricultureLogical<-select(hh,SERIALNO)
agricultureLogical
?SELECT
?select
agricultureLogical<-select(hh,SERIALNO,ACR:AGS)
agricultureLogical
hh<-read.csv(fstr)
hh
agricultureLogical<-select(hh,SERIALNO,ACR:AGS)
agricultureLogical
names(agricultureLogical)
agricultureLogical<-filter(hh, ACR=3 & AGS=6)
agricultureLogical
agricultureLogical<-which(filter(hh, ACR=3 & AGS=6))
agricultureLogical<-filter(hh, ACR=3 & AGS=6)
agricultureLogical<-which(agricultureLogical)
agricultureLogical
head(agricultureLogical)
?filter
hh<-read.csv(fstr)
agricultureLogical<-filter(hh, ACR==3 & AGS==6)
agricultureLogical
agricultureLogical<-filter(hh, which(ACR==3 & AGS==6))
agricultureLogical<-select(hh,SERIALNO,ACR:AGS)
agricultureLogical
head(agricultureLogical)
agricultureLogical<-which(agricultureLogical)
agricultureLogical
which(agricultureLogical)
agricultureLogical<-hh[which(hh$ACR==3 $ hh$AGS==6]$SERIALNO
agricultureLogical
agricultureLogical<-hh[which(hh$ACR==3 $ hh$AGS==6),]$SERIALNO
agricultureLogical
hh<-read.csv(fstr)
agricultureLogical<-hh[which(hh$ACR==3 $ hh$AGS==6),]$SERIALNO
agricultureLogical<-hh[which(hh$ACR==3 & hh$AGS==6),]$SERIALNO
agricultureLogical
agricultureLogical<-C(hh[which(hh$ACR==3 & hh$AGS==6),]$SERIALNO)
agricultureLogical
hh<-read.csv(fstr)
agricultureLogical<-hh[which(hh$ACR==3 & hh$AGS==6),]
agricultureLogical
agricultureLogical<-hh[which(hh$ACR==3 & hh$AGS==6),]$SERIALNO
agricultureLogical
agricultureLogical<-hh[which(hh$ACR==3 & hh$AGS==6),]
agricultureLogical
agricultureLogical<-c(rownames(hh))
agricultureLogical
agricultureLogical<-hh[which(hh$ACR==3 & hh$AGS==6),]
agricultureLogical
c(rownames(agricultureLogical)
c(rownames(agricultureLogical))
agricultureLogical<-hh[which(hh$ACR==3 & hh$AGS==6),]
agricultureLogical<-c(rownames(agricultureLogical))
agricultureLogical
agricultureLogical[1:3]
agricultureLogical<-c(rownames(hh[which(hh$ACR==3 & hh$AGS==6),]))
#agricultureLogical<-c(rownames(agricultureLogical))
agricultureLogical[1:3]
agricultureLogical<-c(rownames(hh[which(hh$ACR==3 & hh$AGS==6),]))
agricultureLogical[1:3]
install.packages("jpeg")
library(jpeg)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, destfile="file.jpeg")
jpg<-read.jpeg("file.jpeg")
jpeg
?jpeg
?read.jpeg
jpg<-readJPEG("file.jpeg", native=TRUE)
jpg
jpg[30,]
jpg[,3]
jpg[,30]
jpg2<-cut2(jpg,g=100))
jpg2<-cut2(jpg,g=100)
library(Hmisc)
jpg2<-cut2(jpg,g=100)
jpg2[30]
jpg2
jpg2<-cut2(jpg,g=100)
jpg2
table(jpg2)
jpg
jpg
quantile(jpg,probs=0.3,0.8))
quantile(jpg,probs=seq(0.3,0.8))
quantile(jpg,probs=seq(0.3))
quantile(jpg,probs=seq(0.0,0.3))
quantile(jpg,probs=seq(0.0,0.8))
quantile(jpg,probs=seq(0.8))
quantile(jpg,probs=c(0.3,0.8))
quantile(jpg,probs=c(0.31,0.81))
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, destfile="file.jpeg")
jpg<-readJPEG("file.jpeg", native=TRUE)
quantile(jpg,probs=c(0.3,0.8))
quantile(jpg,probs=c(30,80))
quantile(jpg,probs=c(0.29,0.79))
quantile(jpg,probs=seq(0,1,0.01))
?readJP
?readJPG
?readJPEG
jpg<-readJPEG("file.jpeg", native=TRUE)
jpg<-readJPEG("file.jpeg", native=FALSE)
jpg<-readJPEG("file.jpeg", TRUE)
?download.file
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, destfile="file.jpeg", mode="wb")
jpg<-readJPEG("file.jpeg", TRUE)
#?readJPEG
quantile(jpg,probs=seq(0,1,0.01))
quantile(jpg,probs=seq(0,3,0.8))
quantile(jpg,probs=c(0,3,0.8))
quantile(jpg,probs=c(0.3,0.8))
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
# 4 Exploratory Data Analysis
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green",breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=)
abline(v=12)
abline(v=12,lwd=2)
abline(v=median(ppm),lwd=4, col="magneta")
abline(v=median(ppm),lwd=4, col="magenta")
names(pollution)
tabel(region)
tabel(pollution$region)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution, col="red")
par(mfrow=c(2,1),mar=(4,4,2,1))
par(mfrow=c(2,1),mar=(4,4,2,1))
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-pollution[pollution$region=="east",]
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region==""), col="green")
hist(subset(pollution, region=="west"), col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude,pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude,pollution$pm25, col=pollution$region)
plot(pollution$latitude,ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude, west$pm25,main="West")
plot(east$latitude, east$pm25,main="East")
# 4 Exploratory Data Analysis
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
?Devices
with(faithful,plot(eruptions,waiting))
with(faithful,plot(eruptions,waiting, main="Old Faithful Geyser data"))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting, main="Old Faithful Geyser data"))
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!1")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
# 4 Exploratory Data Analysis
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(state)
table(state$region)
1
# 4 Exploratory Data Analysis
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
xyplot(Life.Exp~Income|region, data=state, c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
install.packages("Rserve")
library(Rserve)
Rserve()
install.packages("NbClust")
library(NbClust)
setwd("D:/Adam Karolewski/Studia podyplomowe/Coursera/Data Science Specialization/5 Reproducible Research/Project1/RepData_PeerAssessment1/")
##1. Code for reading in the dataset and/or processing the data
unzip("activity.zip", exdir = ".")
df<-read.csv("activity.csv")
df2<-aggregate(steps~date,df,sum)
hist(df2$steps,breaks=10, main="",xlab="")
abline(v = mean(df2$steps), col = "magenta", lwd = 2)
title("Histogram of steps per day",xlab="steps")
text(mean(df2$steps), 15,paste("mean =",ceiling(mean(df2$steps))),col = "magenta", adj = c(-.1, .1))
